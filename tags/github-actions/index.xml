<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Github Actions on nonlinearthink</title><link>https://nonlinearthink.github.io/tags/github-actions/</link><description>Recent content in Github Actions on nonlinearthink</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 01 Mar 2024 09:59:17 +0800</lastBuildDate><atom:link href="https://nonlinearthink.github.io/tags/github-actions/index.xml" rel="self" type="application/rss+xml"/><item><title>如何编写技术博客</title><link>https://nonlinearthink.github.io/p/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/</link><pubDate>Fri, 01 Mar 2024 09:59:17 +0800</pubDate><guid>https://nonlinearthink.github.io/p/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/</guid><description>&lt;p>我在大一的时候就在博客园和 CSDN 写博客，主要内容是平时上课学的 C 语言算法和一些简单的入门教程。后来我停止了一段时间，因为我意识到自己在生产毫无价值的垃圾。&lt;/p>
&lt;p>写一篇合格的博客不是一件容易的事情，借本文分享一下自己多年写博客的一些经验。&lt;/p>
&lt;h2 id="前期的准备">前期的准备&lt;/h2>
&lt;h3 id="发掘有价值的话题">发掘有价值的话题&lt;/h3>
&lt;p>什么是有价值的话题？&lt;/p>
&lt;p>一件事的价值本身就因人而异，在技术领域价值的产生是因为有需求，所以一般而言，需求越大，越有价值。但在有一定的需求的情况下，越是困难的工作越有价值，因为困难的工作本身也意味着更少的人能做，在供需关系的影响下，会推高其价值。&lt;/p>
&lt;p>简而言之，&lt;strong>需求越大，难度越大，越有价值&lt;/strong>。&lt;/p>
&lt;p>同时，有一些人可能希望博客拥有一定盈利能力，为自己贡献一部分收入，毕竟自己花了非常多的时间去学习和分享这些资料。&lt;/p>
&lt;blockquote>
&lt;p>有意思的是，在技术领域，需求量最大的一般是入门水平的技术博客。因为有非常多的人学习计算机，他们中的大部分甚至将来不会从事相关的工作。大部分时候，做入门水平的内容，不仅轻松而且还赚钱，这种现象造就了 CSDN 这样离谱的网站。&lt;/p>
&lt;/blockquote>
&lt;p>我知道很多人都鄙视这些大量灌水的入门水平博客，我也不喜欢，但是至少人家是真的懂流量。&lt;/p>
&lt;p>话说回来，我们认为，优秀的博客必然是具有一定原创性的，最好还是具有一定深度的，但是假如你的水平真的有限，那么这两种类型的博客也是可以考虑的：&lt;/p>
&lt;ul>
&lt;li>总结归纳别人的资料（但是要附上所有的参考链接）&lt;/li>
&lt;li>翻译英语社区的内容（要注明为翻译类文章，且附上原文链接）&lt;/li>
&lt;/ul>
&lt;h3 id="建立自己的知识库">建立自己的知识库&lt;/h3>
&lt;p>博客难产的一个重要原因就是肚子里没有墨水，这个不一定是指你不懂这个技术，也可能是你懂这个技术，但是缺乏系统性阐述的资料。&lt;/p>
&lt;p>我们每一个人每天都在不停接收各种非常碎片化的信息，其中的一些可能是鲜为人知的信息，它们可能是具有一定价值的，但是又不足以形成一篇完整的文章。这个时候最好的策略就是存储它们，当有一天，你需要为你的博客准备素材的时候，也不需要到处回忆和寻找了，只需要从你的个人知识库里面复制粘贴就好了。&lt;/p>
&lt;p>常见的知识库有比如国内的语雀，还有国外的 Notion，相对来说，我个人使用 Notion 更多一些。&lt;/p>
&lt;h2 id="写作技巧">写作技巧&lt;/h2>
&lt;h3 id="拥有合理的排版">拥有合理的排版&lt;/h3>
&lt;p>这可能是我最想吐槽的一点，因为很多 CSDN 的文章，甚至就是生的文本，完全没有排版可言，有些内容其实还可以的，实在是可惜。&lt;/p>
&lt;p>在我看来，Markdown、LaTex 是每一个程序员的必修课，这世界上没有不写博客的程序员，每一个我曾经的同学，他们都写过博客。&lt;/p>
&lt;p>在必要的时候，也可以使用 Markdown 引擎的 HTML 功能来丰富文章的排版。还有，不要忘记 TOC，主要是针对自建网站的同学，大部分博客管理网站都会自动生成。&lt;/p>
&lt;h3 id="学会编写总结">学会编写总结&lt;/h3>
&lt;p>新手的博客往往都是没有总结的，总结是一个非常好的习惯，不仅仅是在写博客的时候，平时你在和其他人交流工作的时候也可以尝试使用总结，可以更好地传达你需要表达的意思。&lt;/p>
&lt;blockquote>
&lt;p>总结往往提醒别人，接下来的事情是重点。这样别人就会用更高的注意力去接收信息。&lt;/p>
&lt;/blockquote>
&lt;p>有一个误区是，很多人认为总结只是复制粘贴文章中的关键信息，但实际上，总结也可以帮助你在完成最终的博客前对文章脉络做一个梳理，帮助你思考文章的结构是否合理，有时候，总结可能还会促使你回去重新调整文章的结构，以增强文章的可读性。&lt;/p>
&lt;h3 id="标注参考资料">标注参考资料&lt;/h3>
&lt;p>新手的博客往往是没有参考资料的，但是这可能是你人生中非常重要的一课：&lt;/p>
&lt;blockquote>
&lt;p>你得要学会尊重别人的成果，这样别人才会尊重你的成果。&lt;/p>
&lt;/blockquote>
&lt;p>有一个问题，是否需要严格按照论文的形式写博客？&lt;/p>
&lt;p>对于这个问题，如果你对自己的要求足够高，那么可以尝试严格使用论文格式去编写博客，但是很多博客并不是什么非常正式的内容，就像这篇文章，可能只是我临时起意，写下来的一些想法。所以我的主张是，你能真实地标注出你所引用的资料，就已经赢过大部分的人了。&lt;/p>
&lt;h2 id="博客部署">博客部署&lt;/h2>
&lt;h3 id="网站托管">网站托管&lt;/h3>
&lt;p>知乎、掘金、CSDN、博客园、简书&lt;/p>
&lt;h3 id="github-pages">Github Pages&lt;/h3>
&lt;p>完全免费的方案，没有任何开销。搭配 Hexo 或者 Hugo 实现静态博客部署。&lt;/p>
&lt;p>关于博客部署架构也有一些建议。&lt;/p>
&lt;h4 id="存储仓库和部署仓库分离">存储仓库和部署仓库分离&lt;/h4>
&lt;p>主要目的是隐藏博客的存储仓库，因为里面可能会涉及到一些私密的内容，比如，你评论系统的密钥。分离之后把存储仓库设置为私密，但是部署仓库必须设置为公开，这样才可以挂载到 Github Pages 上。&lt;/p>
&lt;h4 id="自动化部署">自动化部署&lt;/h4>
&lt;p>主要目的是简化部署流程，当你往存储仓库提交 Markdown 文件的更新之后，Github Actions 会自动触发部署，帮你提交一个新的版本到部署仓库上面。&lt;/p>
&lt;p>以我自己举例，我使用 &lt;a class="link" href="https://github.com/CaiJimmy/hugo-theme-stack-starter" target="_blank" rel="noopener"
>Hugo Theme Stack Starter Template&lt;/a> 去快速创建 Hugo 项目，里面有一个现成的部署脚本。然后我对其中的 &lt;code>deploy.yml&lt;/code> 做了一些修改，详细规则见 &lt;a class="link" href="https://github.com/JamesIves/github-pages-deploy-action" target="_blank" rel="noopener"
>GitHub Pages Deploy Action&lt;/a> 的介绍：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- name: Deploy 🚀
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uses: JamesIves/github-pages-deploy-action@v4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> repository-name: nonlinearthink/nonlinearthink.github.io
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> branch: master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssh-key: ${{ secrets.DEPLOY_KEY }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> folder: public
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clean: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> single-commit: true
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中的 &lt;code>${{ secrets.DEPLOY_KEY }}&lt;/code> 可能会让你感到困惑，这里有一个问题是，Github Actions 需要权限才能提交代码到部署仓库，所以你需要设置一个部署密钥。&lt;/p>
&lt;h4 id="github-deploy-keys--secrets">Github Deploy Keys &amp;amp; Secrets&lt;/h4>
&lt;p>这一点可以参考 Github 官方文档：&lt;a class="link" href="https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions" target="_blank" rel="noopener"
>Using secrets in GitHub Actions&lt;/a>&lt;/p>
&lt;p>先在自己的部署仓库里面创建一个 DEPLOY_KEY，记得勾选写入权限。&lt;/p>
&lt;p>&lt;img src="https://nonlinearthink.github.io/p/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/deploy-key.jpg"
width="1690"
height="1102"
srcset="https://nonlinearthink.github.io/p/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/deploy-key_hu505627e79330b216626219848153253c_72444_480x0_resize_q75_box.jpg 480w, https://nonlinearthink.github.io/p/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/deploy-key_hu505627e79330b216626219848153253c_72444_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="DEPLOY KEY"
class="gallery-image"
data-flex-grow="153"
data-flex-basis="368px"
>&lt;/p>
&lt;p>然后在自己的存储仓库里面创建一个 secrets，其值就是上面的 DEPLOY_KEY 的值：&lt;/p>
&lt;p>&lt;img src="https://nonlinearthink.github.io/p/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/action-secrets.jpg"
width="1669"
height="1134"
srcset="https://nonlinearthink.github.io/p/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/action-secrets_hudeb21a84b02620414653d8485bcf5302_99617_480x0_resize_q75_box.jpg 480w, https://nonlinearthink.github.io/p/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/action-secrets_hudeb21a84b02620414653d8485bcf5302_99617_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="ACTION SECRETS"
class="gallery-image"
data-flex-grow="147"
data-flex-basis="353px"
>&lt;/p>
&lt;h3 id="ecs">ECS&lt;/h3>
&lt;p>假如要在自己购买的服务器上部署博客，使用 Hexo 和 Hugo 也可以，但是你都有自己的服务器了，不如使用动态博客框架算了，比如 Halo。像 Halo 这样的动态博客框架，相当于有自己的 Server，有自己的数据库，还有管理员后台，可以简化博客的管理。&lt;/p>
&lt;blockquote>
&lt;p>自建服务器可能涉及到备案，请谨慎配置评论系统，会大大增加备案的难度&lt;/p>
&lt;/blockquote>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>编写一篇技术博客的注意事项：&lt;/p>
&lt;ul>
&lt;li>要懂得寻找有价值的话题，并注重建立个人的知识库以积累素材。&lt;/li>
&lt;li>编写文章要有清晰的逻辑和排版，记得写总结和参考资料。&lt;/li>
&lt;li>选择合适的博客部署方案。&lt;/li>
&lt;/ul></description></item></channel></rss>